{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplexDataType = require( '@stdlib/ndarray-base-assert-is-complex-floating-point-data-type' );\nvar isndarrayLike = require( '@stdlib/assert-is-ndarray-like' );\nvar isReadOnly = require( '@stdlib/ndarray-base-assert-is-read-only' );\nvar getDType = require( '@stdlib/ndarray-dtype' );\nvar getShape = require( '@stdlib/ndarray-shape' );\nvar getStrides = require( '@stdlib/ndarray-strides' );\nvar getOffset = require( '@stdlib/ndarray-offset' );\nvar getOrder = require( '@stdlib/ndarray-order' );\nvar numel = require( '@stdlib/ndarray-base-numel' );\nvar ind2sub = require( '@stdlib/ndarray-base-ind2sub' );\nvar real = require( '@stdlib/complex-float64-real' );\nvar imag = require( '@stdlib/complex-float64-imag' );\nvar format = require( '@stdlib/string-format' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests whether an object has a specified method.\n*\n* @private\n* @param {Object} obj - input object\n* @param {string} method - method name\n* @returns {boolean} boolean indicating whether an object has a specified method\n*\n* @example\n* var bool = hasMethod( [], 'toJSON' );\n* // returns false\n*/\nfunction hasMethod( obj, method ) {\n\treturn ( typeof obj[ method ] === 'function' );\n}\n\n\n// MAIN //\n\n/**\n* Serializes an ndarray as a JSON object.\n*\n* ## Notes\n*\n* -   The function does **not** serialize data outside of the buffer region defined by the ndarray view.\n*\n* @param {ndarrayLike} x - input ndarray\n* @throws {TypeError} must provide an ndarray-like object\n* @returns {Object} JSON representation\n*\n* @example\n* var array = require( '@stdlib/ndarray-array' );\n*\n* var x = array( [ [ 1.0, 2.0 ], [ 3.0, 4.0 ] ] );\n* // returns <ndarray>\n*\n* var o = toJSON( x );\n* // returns {...}\n*/\nfunction toJSON( x ) {\n\tvar out;\n\tvar len;\n\tvar sh;\n\tvar st;\n\tvar o;\n\tvar v;\n\tvar i;\n\n\tif ( !isndarrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an ndarray. Value: `%s`.', x ) );\n\t}\n\t// Defer to input argument's custom implementation, if already defined...\n\tif ( hasMethod( x, 'toJSON' ) ) {\n\t\treturn x.toJSON();\n\t}\n\t// Build an object containing all ndarray properties needed to revive a serialized ndarray...\n\tout = {};\n\tout.type = 'ndarray';\n\tout.dtype = getDType( x );\n\tout.flags = {\n\t\t'READONLY': isReadOnly( x )\n\t};\n\tout.order = getOrder( x );\n\n\tsh = getShape( x );\n\tout.shape = sh;\n\n\tst = getStrides( x );\n\tout.strides = st.slice();\n\n\to = getOffset( x );\n\n\tlen = numel( out.shape );\n\n\t// Flip the signs of negative strides:\n\tfor ( i = 0; i < st.length; i++ ) {\n\t\tif ( out.strides[ i ] < 0 ) {\n\t\t\tout.strides[ i ] *= -1;\n\t\t}\n\t}\n\t// Cast data to generic array...\n\tout.data = [];\n\tif ( isComplexDataType( out.dtype ) ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = x.get.apply( x, ind2sub( sh, st, o, out.order, i, 'throw' ) );\n\t\t\tout.data.push( real( v ), imag( v ) );\n\t\t}\n\t} else {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tout.data.push( x.get.apply( x, ind2sub( sh, st, o, out.order, i, 'throw' ) ) );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toJSON;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Serialize an ndarray to JSON.\n*\n* @module @stdlib/ndarray-to-json\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2json = require( '@stdlib/ndarray-to-json' );\n*\n* var buffer = [ 1, 2, 3, 4 ];\n* var shape = [ 2, 2 ];\n* var order = 'row-major';\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var arr = ndarray( 'generic', buffer, shape, strides, offset, order );\n* // returns <ndarray>\n*\n* var out = ndarray2json( arr );\n* // returns {...}\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAuBA,IAAIC,EAAoB,QAAS,iEAAkE,EAC/FC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAa,QAAS,0CAA2C,EACjEC,EAAW,QAAS,uBAAwB,EAC5CC,EAAW,QAAS,uBAAwB,EAC5CC,EAAa,QAAS,yBAA0B,EAChDC,EAAY,QAAS,wBAAyB,EAC9CC,EAAW,QAAS,uBAAwB,EAC5CC,EAAQ,QAAS,4BAA6B,EAC9CC,EAAU,QAAS,8BAA+B,EAClDC,EAAO,QAAS,8BAA+B,EAC/CC,EAAO,QAAS,8BAA+B,EAC/CC,EAAS,QAAS,uBAAwB,EAiB9C,SAASC,EAAWC,EAAKC,EAAS,CACjC,OAAS,OAAOD,EAAKC,CAAO,GAAM,UACnC,CAyBA,SAASC,EAAQC,EAAI,CACpB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACvB,EAAegB,CAAE,EACtB,MAAM,IAAI,UAAWL,EAAQ,0DAA2DK,CAAE,CAAE,EAG7F,GAAKJ,EAAWI,EAAG,QAAS,EAC3B,OAAOA,EAAE,OAAO,EAsBjB,IAnBAC,EAAM,CAAC,EACPA,EAAI,KAAO,UACXA,EAAI,MAAQf,EAAUc,CAAE,EACxBC,EAAI,MAAQ,CACX,SAAYhB,EAAYe,CAAE,CAC3B,EACAC,EAAI,MAAQX,EAAUU,CAAE,EAExBG,EAAKhB,EAAUa,CAAE,EACjBC,EAAI,MAAQE,EAEZC,EAAKhB,EAAYY,CAAE,EACnBC,EAAI,QAAUG,EAAG,MAAM,EAEvBC,EAAIhB,EAAWW,CAAE,EAEjBE,EAAMX,EAAOU,EAAI,KAAM,EAGjBM,EAAI,EAAGA,EAAIH,EAAG,OAAQG,IACtBN,EAAI,QAASM,CAAE,EAAI,IACvBN,EAAI,QAASM,CAAE,GAAK,IAKtB,GADAN,EAAI,KAAO,CAAC,EACPlB,EAAmBkB,EAAI,KAAM,EACjC,IAAMM,EAAI,EAAGA,EAAIL,EAAKK,IACrBD,EAAIN,EAAE,IAAI,MAAOA,EAAGR,EAASW,EAAIC,EAAIC,EAAGJ,EAAI,MAAOM,EAAG,OAAQ,CAAE,EAChEN,EAAI,KAAK,KAAMR,EAAMa,CAAE,EAAGZ,EAAMY,CAAE,CAAE,MAGrC,KAAMC,EAAI,EAAGA,EAAIL,EAAKK,IACrBN,EAAI,KAAK,KAAMD,EAAE,IAAI,MAAOA,EAAGR,EAASW,EAAIC,EAAIC,EAAGJ,EAAI,MAAOM,EAAG,OAAQ,CAAE,CAAE,EAG/E,OAAON,CACR,CAKAnB,EAAO,QAAUiB,IC9FjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isComplexDataType", "isndarrayLike", "isReadOnly", "getDType", "getShape", "getStrides", "getOffset", "getOrder", "numel", "ind2sub", "real", "imag", "format", "hasMethod", "obj", "method", "toJSON", "x", "out", "len", "sh", "st", "o", "v", "i", "main"]
}
